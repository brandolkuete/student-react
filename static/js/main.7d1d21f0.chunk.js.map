{"version":3,"sources":["components/Home.js","services/UserService.js","components/HeaderComponent.js","components/FooterComponent.js","services/ScolaireService.js","components/ListStudents.js","components/CreateStudent.js","components/UpdateStudent.js","components/ViewStudent.js","Context/auth.js","Authentification/PrivateRoute.js","Pages/login.js","Pages/signup.js","App.js","serviceWorker.js","index.js"],"names":["Home","buttonStyle","padding","width","size","marginTop","marginBottom","className","to","style","Component","USER_API_URL","user","axios","post","localStorage","removeItem","HeaderComponent","props","state","logout","bind","UserService","logOut","href","onClick","this","FooterComponent","SCOLAR_API_URL","get","student","id","studentId","put","delete","ListStudents","students","addStudent","editStudent","deleteStudent","viewStudent","ScolaireService","getStudents","then","res","setState","data","history","push","filter","map","key","matricule","nom","prenom","filiere","niveau","marginLeft","CreateStudent","changeMatriculeHandler","event","target","value","changeNomHandler","changePrenomHandler","changeDateNaisHandler","date_nais","changeAdresseHandler","addresse","changeNiveauHandler","changeFiliereHandler","saveStudent","e","preventDefault","eleve","StudentService","createStudent","placeholder","name","onChange","type","cancel","updateStudent","match","params","getStudent","ViewStudent","showList","AuthContext","createContext","useAuth","useContext","PrivateRoute","component","rest","authTokens","render","Login","useState","isLoggedIn","setLoggedIn","isError","setIsError","userName","setUserName","password","setPassword","setAuthTokens","username","console","log","signin","result","status","catch","Signup","isSignUp","setIsSignUp","confirmPassword","setConfirmPassword","signup","App","existingTokens","JSON","parse","getItem","Provider","setItem","stringify","path","exact","SignUp","UpdateStudent","Boolean","window","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.7d1d21f0.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class Home extends Component {\r\n    render() {\r\n        \r\n        const buttonStyle = {\r\n            padding:6,\r\n            width:300,\r\n            size:2,\r\n            marginTop:6,\r\n            marginBottom:3\r\n        };\r\n        return (\r\n            <div>\r\n                <h2 className=\"mt-3\">Bienvenue dans l'application de gestion des élèves</h2>\r\n                <br></br>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"card text-center col-md-6 offset-md-3 offset-md-3 mx-auto mt-3 mb-10\">\r\n                            <div className=\"card-body\">\r\n                                <Link to=\"/all-student\" className=\"btn btn-primary btn-lg\" style={buttonStyle}>Elèves</Link>\r\n                                <br></br>\r\n                                <Link to=\"/signin\" className=\"btn btn-primary btn-lg\" style={buttonStyle}>Se connecter</Link>\r\n                                <br></br>\r\n                                <Link to=\"/signup\" className=\"btn btn-primary btn-lg\" style={buttonStyle}>S'inscrire</Link>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import axios from 'axios'\r\n\r\nconst USER_API_URL= \"http://37.187.88.37:17805/scolairerest/users\";\r\n\r\nclass UserService {\r\n    signin(user){\r\n        return axios.post(USER_API_URL+'/signin', user)\r\n    }\r\n    signup(user){\r\n        return axios.post(USER_API_URL+'/signup', user)\r\n    }\r\n    logOut(){\r\n        return localStorage.removeItem(\"tokens\")\r\n    }\r\n}\r\nexport default new UserService()","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport UserService from '../services/UserService'\r\nimport '../Header.css'\r\n\r\nclass HeaderComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {}\r\n\r\n        this.logout= this.logout.bind(this);\r\n    }\r\n    logout(){\r\n        UserService.logOut();\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <header>\r\n                    <nav className=\"navbar navbar-expand-md navbar-dark bg-dark\">\r\n                    <div><a href=\"/\" className=\"navbar-brand\">Students Management App</a></div>\r\n                    <div className=\"bouton-link\"><Link to=\"/\"onClick={this.logout}>Se déconnecter</Link></div>\r\n                    </nav>\r\n                </header>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HeaderComponent","import React, { Component } from 'react'\r\n\r\nclass FooterComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n                 \r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <footer className = \"footer\">\r\n                    <span className=\"text-muted\">All Rights Reserved 2020 BrandolKuete</span>\r\n                </footer>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FooterComponent","import axios from 'axios'\r\n\r\nconst SCOLAR_API_URL= \"http://37.187.88.37:17805/scolairerest/api\";\r\n\r\nclass ScolaireService {\r\n\r\n    getStudents() {\r\n        return axios.get(SCOLAR_API_URL+ '/listeEleve');\r\n    }\r\n\r\n    createStudent(student){\r\n        return axios.post(SCOLAR_API_URL+ '/enregistrerEleve',student)\r\n    }\r\n\r\n    getStudent(id){\r\n        return axios.get(SCOLAR_API_URL+ '/findEleve/' + id)\r\n    }\r\n\r\n    updateStudent(student, studentId){\r\n        return axios.put(SCOLAR_API_URL+'/modifierEleve/'+ studentId, student)\r\n    }\r\n\r\n    deleteStudent(id){\r\n        return axios.delete(SCOLAR_API_URL+ '/supprimerEleve/' +id)\r\n    }\r\n    \r\n}\r\n\r\nexport default new ScolaireService()\r\n","import React, { Component } from 'react'\r\nimport ScolaireService from '../services/ScolaireService'\r\n\r\nexport default class ListStudents extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n                students: []\r\n        }\r\n        this.addStudent = this.addStudent.bind(this);\r\n        this.editStudent = this.editStudent.bind(this);\r\n        this.deleteStudent = this.deleteStudent.bind(this);\r\n        this.viewStudent = this.viewStudent.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        ScolaireService.getStudents().then((res)=>{\r\n            this.setState({students: res.data})\r\n        })\r\n    }\r\n\r\n    addStudent(){\r\n        this.props.history.push('/add-student');\r\n    }\r\n\r\n    editStudent(id){\r\n        this.props.history.push(`/update-student/${id}`);\r\n    }\r\n\r\n    deleteStudent(id){\r\n        ScolaireService.deleteStudent(id).then(res =>{\r\n            this.setState({students: this.state.students.filter(student => student.id !== id)});\r\n        });\r\n    }\r\n\r\n    viewStudent(id){\r\n        this.props.history.push(`/view-student/${id}`);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2 className=\"text-center\">Liste des élèves</h2>\r\n                <div className = \"row ml-3\">\r\n                    <button className=\"btn btn-primary\" onClick={this.addStudent}> Ajouter un élève</button>\r\n                 </div>\r\n                <br></br>\r\n                 <div className = \"row m-3\">\r\n                        <table className = \"table table-striped table-bordered\">\r\n\r\n                            <thead>\r\n                                <tr>\r\n                                    <th> Matricule</th>\r\n                                    <th> Nom</th>\r\n                                    <th> Prénom</th>\r\n                                    <th> Filière</th>\r\n                                    <th> Niveau</th>\r\n                                    <th> Actions</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {\r\n                                    this.state.students.map(\r\n                                        student => \r\n                                        <tr key = {student.id}> \r\n                                             <td> {student.matricule} </td>   \r\n                                             <td> {student.nom} </td>   \r\n                                             <td> {student.prenom}</td>\r\n                                             <td> {student.filiere}</td>\r\n                                             <td>{student.niveau}</td>\r\n                                             <td>\r\n                                                <button onClick={ () => this.editStudent(student.id)} className=\"btn btn-info\">Modifier </button>\r\n                                                 <button style={{marginLeft: \"10px\"}} onClick={ () => this.deleteStudent(student.id)} className=\"btn btn-danger\">Supprimer </button>\r\n                                                 <button style={{marginLeft: \"10px\"}} onClick={ () => this.viewStudent(student.id)} className=\"btn btn-info\">Détails </button>\r\n                                             </td>\r\n                                        </tr>\r\n                                    )\r\n                                }\r\n                            </tbody>\r\n                        </table>\r\n\r\n                 </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport StudentService from '../services/ScolaireService'\r\n\r\nexport default class CreateStudent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            matricule: '',\r\n            nom: '',\r\n            prenom: '',\r\n            date_nais: '',\r\n            addresse: '',\r\n            niveau: '',\r\n            filiere: ''\r\n        }\r\n        this.changeMatriculeHandler = this.changeMatriculeHandler.bind(this);\r\n        this.changeNomHandler = this.changeNomHandler.bind(this);\r\n        this.changePrenomHandler = this.changePrenomHandler.bind(this);\r\n        this.changeDateNaisHandler = this.changeDateNaisHandler.bind(this);\r\n        this.changeAdresseHandler = this.changeAdresseHandler.bind(this);\r\n        this.changeNiveauHandler = this.changeNiveauHandler.bind(this);\r\n        this.changeFiliereHandler = this.changeFiliereHandler.bind(this);\r\n    }\r\n\r\n    changeMatriculeHandler= (event)=>{\r\n        this.setState({matricule: event.target.value})\r\n    }\r\n    changeNomHandler= (event)=>{\r\n        this.setState({nom: event.target.value})\r\n    }\r\n    changePrenomHandler= (event)=>{\r\n        this.setState({prenom: event.target.value})\r\n    }\r\n    changeDateNaisHandler= (event)=>{\r\n        this.setState({date_nais: event.target.value})\r\n    }\r\n    changeAdresseHandler= (event)=>{\r\n        this.setState({addresse: event.target.value})\r\n    }\r\n    changeNiveauHandler= (event)=>{\r\n        this.setState({niveau: event.target.value})\r\n    }\r\n    changeFiliereHandler= (event)=>{\r\n        this.setState({filiere: event.target.value})\r\n    }\r\n\r\n    cancel(){\r\n        this.props.history.push('/');\r\n    }\r\n\r\n    saveStudent= (e)=>{\r\n        e.preventDefault();\r\n        let eleve= {\r\n            matricule: this.state.matricule,\r\n            nom: this.state.nom,\r\n            prenom: this.state.prenom,\r\n            date_nais: this.state.date_nais,\r\n            addresse: this.state.addresse,\r\n            niveau: this.state.niveau,\r\n            filiere: this.state.filiere\r\n        }\r\n        StudentService.createStudent(eleve).then((res)=>{\r\n            this.props.history.push('/all-student');\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <br></br>\r\n                   <div className = \"container\">\r\n                        <div className = \"row\">\r\n                            <div className = \"card col-md-7 offset-md-3 offset-md-3 mx-auto\">\r\n                                <h2>Enregistrer un élève</h2>\r\n                                <div className = \"card-body\">\r\n                                    <form>\r\n                                        <div className = \"form-group\">\r\n                                            <label> Matricule: </label>\r\n                                            <input placeholder=\"Entrer le matricule...\" name=\"matricule\" className=\"form-control\" \r\n                                                value={this.state.matricule} onChange={this.changeMatriculeHandler}/>\r\n                                        </div>\r\n                                        <div className = \"form-group\">\r\n                                            <label> Nom: </label>\r\n                                            <input placeholder=\"Entrer le nom...\" name=\"nom\" className=\"form-control\" \r\n                                                value={this.state.nom} onChange={this.changeNomHandler}/>\r\n                                        </div>\r\n                                        <div className = \"form-group\">\r\n                                            <label> Prénom: </label>\r\n                                            <input placeholder=\"Entrer le prénom...\" name=\"prenom\" className=\"form-control\" \r\n                                                value={this.state.prenom} onChange={this.changePrenomHandler}/>\r\n                                        </div>\r\n                                        <div className = \"form-group\">\r\n                                            <label> Date de Naissance: </label>\r\n                                            <input name=\"date_nais\" className=\"form-control\" type=\"date\" \r\n                                                value={this.state.date_nais} onChange={this.changeDateNaisHandler}/>\r\n                                        </div>\r\n                                        <div className = \"form-group\">\r\n                                            <label> Adresse: </label>\r\n                                            <input placeholder=\"Entrer une adresse...\" name=\"addresse\" className=\"form-control\"\r\n                                                value={this.state.addresse} onChange={this.changeAdresseHandler}/>\r\n                                        </div>\r\n                                        <div className = \"form-group\">\r\n                                            <label> Niveau: </label>\r\n                                            <input placeholder=\"Entrer le niveau...\" name=\"niveau\" className=\"form-control\"\r\n                                                value={this.state.niveau} onChange={this.changeNiveauHandler}/>\r\n                                        </div>\r\n                                        <div className = \"form-group\">\r\n                                            <label> Filière: </label>\r\n                                            <input placeholder=\"Entrer la filière...\" name=\"filiere\" className=\"form-control\"\r\n                                                value={this.state.filiere} onChange={this.changeFiliereHandler}/>\r\n                                        </div>\r\n\r\n                                        <button className=\"btn btn-success\" onClick={this.saveStudent}>Enregistrer</button>\r\n                                        <button className=\"btn btn-danger\" onClick={this.cancel.bind(this)} style={{marginLeft: \"10px\"}}>Annuler</button>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                   </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport ScolaireService from '../services/ScolaireService';\r\n//import StudentService from '../services/ScolaireService'\r\n\r\nexport default class CreateStudent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            id: this.props.match.params.id,\r\n            matricule:'',\r\n            nom: '',\r\n            prenom: '',\r\n            date_nais: '',\r\n            addresse: '',\r\n            niveau: '',\r\n            filiere: ''\r\n        }\r\n        this.changeMatriculeHandler = this.changeMatriculeHandler.bind(this);\r\n        this.changeNomHandler = this.changeNomHandler.bind(this);\r\n        this.changePrenomHandler = this.changePrenomHandler.bind(this);\r\n        this.changeDateNaisHandler = this.changeDateNaisHandler.bind(this);\r\n        this.changeAdresseHandler = this.changeAdresseHandler.bind(this);\r\n        this.changeNiveauHandler = this.changeNiveauHandler.bind(this);\r\n        this.changeFiliereHandler = this.changeFiliereHandler.bind(this);\r\n    }\r\n\r\n    changeMatriculeHandler= (event)=>{\r\n        this.setState({matricule: event.target.value})\r\n    }\r\n    changeNomHandler= (event)=>{\r\n        this.setState({nom: event.target.value})\r\n    }\r\n    changePrenomHandler= (event)=>{\r\n        this.setState({prenom: event.target.value})\r\n    }\r\n    changeDateNaisHandler= (event)=>{\r\n        this.setState({date_nais: event.target.value})\r\n    }\r\n    changeAdresseHandler= (event)=>{\r\n        this.setState({addresse: event.target.value})\r\n    }\r\n    changeNiveauHandler= (event)=>{\r\n        this.setState({niveau: event.target.value})\r\n    }\r\n    changeFiliereHandler= (event)=>{\r\n        this.setState({filiere: event.target.value})\r\n    }\r\n\r\n    cancel(){\r\n        this.props.history.push('/');\r\n    }\r\n\r\n    componentDidMount(){\r\n        ScolaireService.getStudent(this.state.id).then((res)=>{\r\n            let student= res.data;\r\n            this.setState({\r\n                id: student.id,\r\n                matricule: student.matricule,\r\n                nom: student.nom,\r\n                prenom: student.prenom,\r\n                date_nais: student.date_nais,\r\n                addresse: student.addresse,\r\n                niveau: student.niveau,\r\n                filiere: student.filiere\r\n            });\r\n        });\r\n\r\n    }\r\n\r\n    updateStudent= (e)=>{\r\n        e.preventDefault();\r\n        let eleve= {\r\n            id: this.state.id,\r\n            matricule: this.state.matricule,\r\n            nom: this.state.nom,\r\n            prenom: this.state.prenom,\r\n            date_nais: this.state.date_nais,\r\n            addresse: this.state.addresse,\r\n            niveau: this.state.niveau,\r\n            filiere: this.state.filiere\r\n        }\r\n        ScolaireService.updateStudent(eleve, eleve.id).then((res)=>{\r\n            this.props.history.push('/');\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <br></br>\r\n                   <div className = \"container\">\r\n                        <div className = \"row\">\r\n                            <div className = \"card col-md-7 offset-md-3 offset-md-3 mx-auto\">\r\n                                <h2>Modifier l'élève</h2>\r\n                                <div className = \"card-body\">\r\n                                    <form>\r\n                                        <div className = \"form-group\">\r\n                                            <label> Matricule: </label>\r\n                                            <input name=\"matricule\" className=\"form-control\" \r\n                                                value={this.state.matricule} onChange={this.changeMatriculeHandler}/>\r\n                                        </div>\r\n                                        <div className = \"form-group\">\r\n                                            <label> Nom: </label>\r\n                                            <input name=\"nom\" className=\"form-control\" \r\n                                                value={this.state.nom} onChange={this.changeNomHandler}/>\r\n                                        </div>\r\n                                        <div className = \"form-group\">\r\n                                            <label> Prénom: </label>\r\n                                            <input name=\"prenom\" className=\"form-control\" \r\n                                                value={this.state.prenom} onChange={this.changePrenomHandler}/>\r\n                                        </div>\r\n                                        <div className = \"form-group\">\r\n                                            <label> Date de Naissance: </label>\r\n                                            <input name=\"date_nais\" className=\"form-control\" type=\"date\" \r\n                                                value={this.state.date_nais} onChange={this.changeDateNaisHandler}/>\r\n                                        </div>\r\n                                        <div className = \"form-group\">\r\n                                            <label> Adresse: </label>\r\n                                            <input name=\"addresse\" className=\"form-control\"\r\n                                                value={this.state.addresse} onChange={this.changeAdresseHandler}/>\r\n                                        </div>\r\n                                        <div className = \"form-group\">\r\n                                            <label> Niveau: </label>\r\n                                            <input name=\"niveau\" className=\"form-control\"\r\n                                                value={this.state.niveau} onChange={this.changeNiveauHandler}/>\r\n                                        </div>\r\n                                        <div className = \"form-group\">\r\n                                            <label> Filière: </label>\r\n                                            <input name=\"filiere\" className=\"form-control\"\r\n                                                value={this.state.filiere} onChange={this.changeFiliereHandler}/>\r\n                                        </div>\r\n\r\n                                        <button className=\"btn btn-success\" onClick={this.updateStudent}>Enregistrer les modifications</button>\r\n                                        <button className=\"btn btn-danger\" onClick={this.cancel.bind(this)} style={{marginLeft: \"10px\"}}>Annuler</button>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                   </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport ScolaireService from '../services/ScolaireService'\r\n\r\nexport default class ViewStudent extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            id: this.props.match.params.id,\r\n            student: {}\r\n        }\r\n        this.showList= this.showList.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        ScolaireService.getStudent(this.state.id).then( res => {\r\n            this.setState({student: res.data});\r\n        })\r\n    }\r\n\r\n    showList(){\r\n        this.props.history.push('/all-student');\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <br></br>\r\n                <div className = \"card col-md-12 m-3 mx-auto\">\r\n                    <h3 className = \"text-center\"> Détails sur l'élève</h3>\r\n                    <div className = \"card-body\">\r\n                        <div className = \"row\">\r\n                            <label> Matricule: </label>\r\n                            <div className=\"ml-2 text-secondary\"> { this.state.student.matricule }</div>\r\n                        </div>\r\n                        <div className = \"row\">\r\n                            <label> Nom: </label>\r\n                            <div className=\"ml-2 text-secondary\"> { this.state.student.nom }</div>\r\n                        </div>\r\n                        <div className = \"row\">\r\n                            <label> Prénom: </label>\r\n                            <div className=\"ml-2 text-secondary\"> { this.state.student.prenom }</div>\r\n                        </div>\r\n                        <div className = \"row\">\r\n                            <label> Date de naissance: </label>\r\n                            <div className=\"ml-2 text-secondary\"> { this.state.student.date_nais }</div>\r\n                        </div>\r\n                        <div className = \"row\">\r\n                            <label> Adresse: </label>\r\n                            <div className=\"ml-2 text-secondary\"> { this.state.student.addresse}</div>\r\n                        </div>\r\n                        <div className = \"row\">\r\n                            <label> Niveau: </label>\r\n                            <div className=\"ml-2 text-secondary\"> { this.state.student.niveau }</div>\r\n                        </div>\r\n                        <div className = \"row\">\r\n                            <label> Filière: </label>\r\n                            <div className=\"ml-2 text-secondary\"> { this.state.student.filiere }</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className = \"row ml-3\">\r\n                    <button className=\"btn btn-primary\" onClick={this.showList}> Retour à la liste</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import { createContext, useContext } from 'react';\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport function useAuth() {\r\n  return useContext(AuthContext);\r\n}","import React from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport {useAuth} from '../Context/auth'\r\n\r\n// Ce décorateur sera utilisé par toute route devant être derrière l'authentification\r\nfunction PrivateRoute({ component: Component, ...rest }) {\r\n\r\n  // Afficher le composant uniquement lorsque l'utilisateur est connecté, Sinon, rediriger l'utilisateur vers la page /signin\r\n\r\n  const { authTokens } = useAuth();\r\n  \r\n  return(\r\n    <Route \r\n      {...rest} \r\n      render={ (props) => authTokens ? ( <Component {...props} />) : (<Redirect to=\"/signin\"/>) }\r\n    />\r\n  );\r\n}\r\n\r\nexport default PrivateRoute;","import React,{useState} from 'react'\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport {useAuth} from '../Context/auth'\r\nimport UserService from '../services/UserService'\r\n\r\nfunction Login() {\r\n\r\n    const [isLoggedIn, setLoggedIn] = useState(false);\r\n    const [isError, setIsError] = useState(false);\r\n    const [userName, setUserName] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const { setAuthTokens } = useAuth();\r\n\r\n    \r\n    function postLogin(e){\r\n      e.preventDefault();\r\n      let user= {\r\n        username: userName,\r\n        password: password\r\n      }\r\n      console.log(user)\r\n        UserService.signin(user).then(result => {\r\n          if (result.status === 200) {\r\n            setAuthTokens(result.data);\r\n            setLoggedIn(true);\r\n          } else {\r\n            setIsError(true);\r\n          }\r\n        }).catch(e => {\r\n          setIsError(true);\r\n        });\r\n      }\r\n    \r\n      if (isLoggedIn) {\r\n        return <Redirect to=\"/all-student\" />;\r\n      }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <form className=\"col-md-7 offset-md-3 offset-md-3 mx-auto\">\r\n                    <h3>Log In</h3>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Username</label>\r\n                        <input type=\"text\" className=\"form-control\" placeholder=\"Enter username\"  value={userName} \r\n                        onChange={e => {setUserName(e.target.value);}}/>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Password</label>\r\n                        <input type=\"password\" className=\"form-control\" placeholder=\"Enter password\" value={password} \r\n                        onChange={e => {setPassword(e.target.value);}}/>\r\n                    </div>\r\n\r\n                    <button type=\"submit\" className=\"btn btn-primary btn-block\" onClick={postLogin}>Sign In</button>\r\n                    <p className=\"forgot-password text-right\">\r\n                    <Link to=\"/signup\">Sign Up</Link>\r\n                    <br/>\r\n                    { isError ? (<span className=\"text-danger\">The username or password provided were incorrect!</span>) : (<span></span>)}\r\n                    </p>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Login\r\n","import React, {useState} from 'react'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport UserService from '../services/UserService'\r\n\r\nexport default function Signup(props) {\r\n\r\n    const [isSignUp, setIsSignUp] = useState(false);\r\n    const [isError, setIsError] = useState(false);\r\n    const [userName, setUserName] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n\r\n    function signUp(e) {\r\n      e.preventDefault();\r\n      let user= {\r\n        username: userName,\r\n        password: password,\r\n        confirmPassword: confirmPassword\r\n      }\r\n        UserService.signup(user).then(result => {\r\n          if (result.status === 200) {\r\n            setIsSignUp(true);\r\n          } else {\r\n            setIsError(true);\r\n          }\r\n        }).catch(e => {\r\n          setIsError(true);\r\n        });\r\n      }\r\n    \r\n      if (isSignUp) {\r\n        return <Redirect to=\"/signin\" />;\r\n      }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <form className=\"col-md-7 offset-md-3 offset-md-3 mx-auto\">\r\n                    <h3>Sign Up</h3>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>UserName</label>\r\n                        <input type=\"text\" className=\"form-control\" placeholder=\"Enter username\" value={userName} name=\"username\"\r\n                        onChange={e => {setUserName(e.target.value);}} />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Password</label>\r\n                        <input type=\"password\" className=\"form-control\" placeholder=\"Enter password\" value={password}  name=\"password\"\r\n                        onChange={e => {setPassword(e.target.value);}}/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Confirm Password</label>\r\n                        <input type=\"password\" className=\"form-control\" placeholder=\"Enter password again\" value={confirmPassword}  name=\"confirmPassword\"\r\n                        onChange={e => {setConfirmPassword(e.target.value);}}/>\r\n                    </div>\r\n\r\n                    <button type=\"submit\" className=\"btn btn-primary btn-block\" onClick={signUp}>Sign Up</button>\r\n                    <p className=\"forgot-password text-right\">\r\n                     <Link to=\"/signin\">Sign In</Link>\r\n                    <br/>\r\n                    { isError ? (<span className=\"text-danger\">Une erreur est survenue lors de l'enregistrement</span>) : (<span></span>)}\r\n                    </p>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState} from 'react';\r\nimport './App.css';\r\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom'\r\nimport Home from './components/Home'\r\nimport HeaderComponent from './components/HeaderComponent'\r\nimport FooterComponent from './components/FooterComponent'\r\nimport ListStudents from './components/ListStudents'\r\nimport CreateStudent from './components/CreateStudent'\r\nimport UpdateStudent from './components/UpdateStudent'\r\nimport ViewStudent from './components/ViewStudent'\r\nimport {AuthContext} from './Context/auth'\r\nimport PrivateRoute from './Authentification/PrivateRoute'\r\nimport Login from './Pages/login'\r\nimport SignUp from './Pages/signup'\r\n\r\n// Provider value= false signifie que notre hook useAuth retournera toujours false lors de la vérification de l'authentification\r\n// par conséquent, toutes les routes privées sont inaccessibles\r\n\r\nfunction App(props) {\r\n\r\n  const existingTokens = JSON.parse(localStorage.getItem(\"tokens\"));\r\n  const [authTokens, setAuthTokens] = useState(existingTokens);\r\n  \r\n  const setTokens = (data) => {\r\n    localStorage.setItem(\"tokens\", JSON.stringify(data));\r\n    setAuthTokens(data);\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <AuthContext.Provider value={{ authTokens, setAuthTokens: setTokens }}>\r\n        <Router>\r\n          <HeaderComponent/>\r\n          <Switch>\r\n            <Route path=\"/student-react\" exact component={Home}/>\r\n            <Route path=\"/all-student\" exact component={ListStudents}/>\r\n            <Route path=\"/signin\" exact component={Login}/>\r\n            <Route path=\"/signup\" exact component={SignUp}/>\r\n            <PrivateRoute path=\"/add-student\" component={CreateStudent}/>\r\n            <PrivateRoute path=\"/update-student/:id\" component={UpdateStudent}/>\r\n            <Route path=\"/view-student/:id\" component={ViewStudent}/>\r\n          </Switch>\r\n          <FooterComponent/>\r\n        </Router>\r\n      </AuthContext.Provider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}